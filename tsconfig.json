{
  "compilerOptions": {
    //编译选项
    "target": "esnext", //目标代码(ts ->js(es5/6/7...))
    "module": "esnext", //目标代码需要使用的模块化方案(commonjs/es module)
    "strict": true, //严格模式：严格一些的检查
    "jsx": "preserve", //对jsx做如何的处理 preserve：保留/不处理
    "importHelpers": true, //辅助的导入功能
    "moduleResolution": "node", //按照node的方式去解析模块
    "skipLibCheck": true, //跳过对一些库的类型检测
    "esModuleInterop": true, //commonjs/es module能不能混合使用
    "allowSyntheticDefaultImports": true, //commonjs/es module能不能混合使用
    "sourceMap": true, //是否生成映射文件
    "baseUrl": ".", //文件路径在解析时基本的url
    "types": ["webpack-env"], //指定具体要解析使用的类型，不写时就默认使用target中的类型
    "paths": {
      //路径解析(类似于webpack中的alias)
      "@/*": ["src/*"]
    },
    "lib": ["esnext", "dom", "dom.iterable", "scripthost"] //可以指定在项目中可以使用哪些库的类型
  },
  //include：当前有哪些代码需要经过编译解析
  "include": [
    "src/**/*.ts",
    "src/**/*.tsx",
    "src/**/*.vue",
    "tests/**/*.ts",
    "tests/**/*.tsx"
  ],
  // exclude：要排除哪些代码
  "exclude": ["node_modules"]
}
